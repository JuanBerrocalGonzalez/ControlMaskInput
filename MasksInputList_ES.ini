; ControlMaskInput v1.52 by Juan Berrocal González.
; Copyright 2023 - The ControlMaskInput Author (https://github.com/JuanBerrocalGonzalez)
;
;---------------------------------------------------------------------------------------------------------------------------------------------------
;
; [Nombre de la máscara] 
; type = number, code, text, datetime    
;      '--> number numeros + punto y coma. Quita los ceros a la izquierda y a la derecha
;      '--> code  numeros + punto y coma.
;      '--> text  cualquier carácter alfanumérico.
;      '--> datetime comprueba que la fecha y hora sea correcta.
;
; ModeRegExpInput = light, strong   <--(Es opcional)
;              
;    light -->  para que al teclear en el input o textarea deje pasar caracteres no válidos y que solamente afecte al estilo del input o textarea.
;               El estilo se cambia con las hojas de estilos CSS. Ejemplos en el archivo css/controlmaskinput.css <--(Este archivo CSS es opcional, puedes hacerlo en tus hojas CSS)
;               Con input[MaskinputValueIsOK=true] o input[MaskinputValueIsOK=false] o textarea[MaskinputValueIsOK=true] o textarea[MaskinputValueIsOK=false],
;               puedes cambiar el color de fondo, etc.., cuando se cumple la máscara de control es true y false cuando no se cumple.
;               
;    strong --> para que al teclear en el input o textarea no deje pasar caracteres no válidos y ademas afecta al estilo del input o textarea como
;               se describe en el párrafo anterior.
:
;    light o strong se puede asignar individualmente en cada máscara de control en el parámetro ModeRegExpInput = xxxxx
;    Si ModeRegExpInput no esta definida o el valor no es válido, se toma ModeRegExpInputDefault para esa máscara de control <--(en archivo de configuración MasksInputConfig.ini)
;    
;    
; RegExpInput = /^...cadena con patrón de control de datos cuando se teclea...$/flags <--(flags es opcional)
;             '-->Puedes crear más de una cadena separandola con dos barras ||
;              Ejemplo: /^cadena1..$/flags || /^cadena2..$/flags || /^cadena3..$/flags  etc...
;              Valida en cuanto una de las cadenas con patrón de control se cumpla
;              Si RegExpInput no está definido el input o textarea aceptará cualquier carácter y puedes validar con RegExpOutput
;
;              Con 'RegExpInput' en las Expresiones Regulares debes tener en cuenta que debes aceptar la expresión regular tal como se va introduciendo. 
;              Por ejemplo un código de tres dígitos: Así es válido --> /^[0-9]{1,3}$/ permite de 1 a 3 dígitos. 
;              Pero NO así --> /^[0-9]{3}$/ porque no se puede teclear tres dígitos a la vez, salvo que des a pegar.
;
; length: Longitud de la cadena <--(Es opcional)
;
; RegExpOutput = /^...cadena con patrón de control de datos para validar cuando el input o textarea pierde el foco...$/flags <--(flags es opcional) 
;              '-->Puedes crear más de una cadena separandola con dos barras || al igual que se explica en RegExpInput
;              Si RegExpOutput no está definido el input o textarea no realizará validación al perder el foco.
;
; ValueFormat= Da formato al valor del input o textarea cuando pierde el foco.
;              Al input/textarea se le creará la propiedad value2 que contendrá el valor sin formato.
; 
;              Para Formatos number o code puedes usar los siguientes caracteres de parámetros              
;              0	Muestra un dígito o un cero.
;              #	Muestra un dígito o nada. 
;              ,  	Marcador de posición decimal. --> Puedes cambiarlo en DecimalPlaceholder de MasksInputConfig.ini
;              .  	Separador de miles.           --> Puedes cambiarlo en ThousandsSeparator de MasksInputConfig.ini
;              %    Se inserta en la posición en la que aparece en ValueFormat.
;      €, $, etc.   Se inserta en la posición en la que aparece en ValueFormat.
;
;              También puedes usar expresiones regulares para dar formato o reemplazar caracteres o palabras
;              Ejemplo1: /(\+\d{3})?(\d{3})(\d{3})(\d{3})/ <[$1 $2 $3 $4]>  
;                        '--> Da formato a un número de teléfono separandolos con espacios en 4 bloques 
;                        El primer argumento es la Expresión Regular separadas por las barras / ... /
;                        El segundo argumento son los resultados de cada bloque entre paréntesis ( ... )  de la Expresión Regular
;                        El segundo argumento debe estar entre estos simbolos <[ ... ]>
;
;              Ejemplo2: /Feo|Tonto|Inutil|Borde|Triste/ig <[{"feo":"Guapo", "tonto":"Listo", "inutil":"Genio", "borde":"Simpático", "triste":"Alegre"}]>
;                        '--> Reemplaza unas palabras por otras.
;                        El primer argumento es la Expresión Regular separadas por las barras / ... /
;                        El segundo argumento es un array "Palabra1":"Reemplazo1", "Palabra2":"Reemplazo2", etc.. 
;                        El segundo argumento debe estar entre estos simbolos <[{ ... }]>
;
;
;---------------------------------------------------------------------------------------------------------------------------------------------------
;  A PARTIR DE AQUÍ ESTÁN DEFINIDAS LAS MÁSCARAS DE CONTROL. SON SUGERENCIAS, PUEDES MODIFICARLA, CREAR NUEVAS O QUITAR LAS QUE NO NECESITES.
;  TIENES UN MUNDO DE POSIBILIDADES Y OPCIONES CON LA HERRAMIENTA ControlMaskInput by Juan Berrocal González.
;---------------------------------------------------------------------------------------------------------------------------------------------------
;
;
; Cantidad númerica desde -99.999,999 hasta 99.999,999
[AMOUNT]
type=number
RegExpInput=/^(-?([0-9]+)?[\.,]?([0-9]{0,3})?)$/
length=9
;RegExpOutput=
ValueFormat=###.###.###,###
;
;
; Cantidad númerica desde -999.999,999 hasta 999.999,999
[PRICE]
type=number
RegExpInput=/^(-?([0-9]+)?[\.,]?([0-9]{0,3})?)$/
length=8
ValueFormat=##.###.###,00€
;
;
; Cantidad númerica desde -9.999.999,99€ hasta 9.999.999,99€
[MONEY]
type=number
RegExpInput=/^(-?([0-9]+)?[\.,]?([0-9]{0,2})?)$/
length=12
ValueFormat=###.###.###.###,##€
;
;
; % Descuento desde 0.01% hasta 100%
[DISCOUNT]
type=number
RegExpInput=/^([0-9]{0,2})?[\.,]?$/ || /^[0-9]{1,2}[\.,]([0-9]{0,2})?$/ || /^(100)$/
length=5
ValueFormat=###,##%
;
;
; % de Margen desde 0.01% hasta 9999.99%
[MARGIN]
type=number
RegExpInput=/^(-?[0-9]{0,4})?[\.,]?$/ || /^-?[0-9]{1,4}[\.,]([0-9]{0,2})?$/
length=8
ValueFormat=#.###,##%
;
;
; Cantidad númerica desde 0 hasta 9
[CODE1]
type=code
RegExpInput=/^[0-9]{0,1}$/
length=1
;RegExpOutput=
;
;
; Cantidad númerica desde 00 hasta 99
[CODE2]
type=code
RegExpInput=/^[0-9]{1,2}$/
length=2
RegExpOutput=/^[0-9]{2}$/
ValueFormat=00
;
;
; Cantidad númerica desde 0 hasta 999
[CODE3]
type=code
RegExpInput=/^[0-9]{1,3}$/
length=3
RegExpOutput=
ValueFormat=000
;
;
; Cantidad númerica desde 0000 hasta 9999
[CODE4]
type=code
RegExpInput=/^[0-9]{1,4}$/
length=4
RegExpOutput=/^[0-9]{4}$/
ValueFormat=0000
;
;
; Cantidad númerica desde 0 hasta 9999
[CODE5]
type=code
RegExpInput=/^[0-9]{1,5}$/
length=5
RegExpOutput=
ValueFormat=00000
;
;
;Código desde 10000 hasta 19999
[CODE10M]
type=code
RegExpInput=/^1{1}[0-9]{0,4}$/
length=5
RegExpOutput=/^1{1}[0-9]{4}$/
;
;
;Código desde 20000 hasta 29999
[CODE20M]
type=code
RegExpInput=/^2{1}[0-9]{0,4}$/
length=5
RegExpOutput=/^2{1}[0-9]{4}$/
;
;
;Código desde 10000 hasta 29999
[CODE10M-20M]
type=code
RegExpInput=/^1{1}[0-9]{0,4}$/ || /^2{1}[0-9]{0,4}$/
length=5
RegExpOutput=/^1{1}[0-9]{4}$/ || /^2{1}[0-9]{4}$/
;
;
; Cantidad númerica desde 0 hasta 99999
[POSTALCODE]
type=code
RegExpInput=/^[0-9]{0,5}$/
length=5
;RegExpOutput=/^[0-9]{5}$/
ValueFormat=00000
;
;
; Correo electrónico
[EMAIL]
type=text
ModeRegExpInput=strong
RegExpInput=/^([a-z0-9!#$%&'*/=?^_`{|}~\-\+]+(\.)?)+$/i || /^([a-z0-9!#$%&'*/=?^_`{|}~\-\+]+(\.)?[a-z0-9!#$%&'*/=?^_`{|}~\-\+]+)+@((?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.?)+)?[a-z0-9]?(?:[a-z0-9-]*[a-z0-9]?)?$/i
;
RegExpOutput=/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i
;
;
; Correos electrónicos separados por coma o punto y coma
[EMAILS]
type=text
ModeRegExpInput=light
RegExpInput=/^([a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?([,;]?\s*))*$/gi
;
RegExpOutput=/^([a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?([,;]?\s*))*$/gi
;
;
; Url para páginas web
[URL]
type=text
ModeRegExpInput=strong
RegExpInput=/^(h|ht|htt|https?|https?:|https?:/|https?://|https?://w{0,3}\.?)$/i  || /^(https?://)(www\.)?((?:[a-z0-9](?:[a-z0-9-/]*[a-z0-9])?\.?)+)?(?:[a-z0-9-/]*[a-z0-9]?)+$/i
;
RegExpOutput=/^(https?://)(www\.)?((?:[a-z0-9](?:[a-z0-9-/]*[a-z0-9])?\.)+)(?:[a-z0-9-/]*[a-z0-9]?)+$/i
;
;
; Número de teléfono con prefijo opcional
[PHONE]
type=code
RegExpInput=/^(\+?[0-9]{0,3})?[0-9]{0,9}$/
;
RegExpOutput=/^(\+?[0-9]{0,3})?[0-9]{9}$/
;
;ValueFormat=/(\+\d{3})?(\d{3})(\d{2})(\d{2})(\d{2})/ <[$1 $2 $3 $4 $5]>
ValueFormat=/(\+\d{3})?(\d{3})(\d{3})(\d{3})/ <[$1 $2 $3 $4]>
;
;
; NIF español o NIE extranjeros
[NIF/NIE]
type=text
ModeRegExpInput=light
RegExpInput=/^([0-9]{0,8}[A-Z]?)$/i || /^([XYZ]?[0-9]{0,7}[A-Z]?)$/i
;
RegExpOutput=/^([0-9]{8}[A-Z])$/i || /^([XYZ]{1}[0-9]{7}[A-Z]{1})$/i
;
;
;
; CIF de empresas
[CIF]
type=text
RegExpInput=/^([ABCDEFGHJNPQRSUVW]?[0-9]{0,7}[0-9A-Z]?)$/i
;
RegExpOutput=/^([ABCDEFGHJNPQRSUVW]{1}[0-9]{7}[0-9A-Z]{1})$/i
;
ValueFormat=/(\+\w{1})?(\d{2})(\d{3})(\d{3})/ <[$1-$2.$3.$4]>
;
;
; NIF español o NIE extranjeros o CIF de empresas
[NIF/NIE/CIF]
type=text
RegExpInput=/^([0-9]{0,8}[A-Z]?)$/i || /^([XYZ]?[0-9]{0,7}[A-Z]?)$/i || /^([ABCDEFGHJNPQRSUVW]?[0-9]{0,7}[0-9A-Z]?)$/i
;
RegExpOutput=/^([0-9]{8}[A-Z])$/i || /^([XYZ]{1}[0-9]{7}[A-Z]{1})$/i || /^([ABCDEFGHJNPQRSUVW]{1}[0-9]{7}[0-9A-Z]{1})$/i
;
;
;
; Password de 8 letras mínimo que debe contener un simbolo al menos, una mayúscula al menos, una minúscula al menos y un número al menos
[PASSWORD]
type=text
length=20
ModeRegExpInput=light
RegExpInput=/^(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])\S{8,}$
;
;RegExpOutput=/^(?=.*\d)(?=.*[\u0021-\u002b\u003c-\u0040])(?=.*[A-Z])(?=.*[a-z])\S{4,8}$
RegExpOutput==/^(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])\S{8,}$
;
;
;
;---------------------------------------------------------------------------------------------------------------------------------------------------
; Para la cadena de patrón de control y formato de DATETIME puedes usar los siguientes caracteres de parámetros:
;     d – Día del mes de 01 al 31.
;     j – Día del mes sin 0 para los números inferiores a 10, del 1 to 31.
;     m – Número de mes de 01 a 12.
;     n – Número de mes sin 0, del 1 al 12.
;     Y – Año en 4 dígitos.
;     y – Año en 2 dígitos.
;     H – Hora con formato de 00 a 23.
;     G - Hora sin 0, con formato de 0 a 23.
;     i – Minutos de 00 a 59.
;     s – Segundos de 00 a 59. 
;     u – Microsegundos de 000 a 999.
;     / - Separador Día/Mes/Año  <-- u otros caracteres como: - . o espacio
;     : - Separador Minutos:Segundos
;     . - Separador de Microsegundos  
;     space - Separador entre date y time
;     T - Separador entre date y time
;     Ejemplo: la máscara d/m/Y valida de la siguiente manera:
;              una fecha con el día 01 al 31, un separador /, el mes 01 al 12, otro separador / y el año del 0001 al 9999
;              la máscara dmY valida igual pero no lleva los separadores
;  
;     NOTA: No los caracteres sin cero delante como j,n y G deberan usarse con separadores. j/n/Y  no es válido -> jnY   (...de momento)
;           Se pueden incluir varias máscaras separadas por ||
;           Ejemplo: RegExpInput=d/m/Y || dmY || d/m/Y H:i    <----(Si alguna es validada se dará por buena)
;
; ValueFormat dará formato a la fecha y hora si se cumple RegExpOutput.
; Si no se indica RegExpOutput, ValueFormat añadirá de la fecha y hora actual del sistema el resto de valores no introducidos.
;
; FillDateTimeValue2 Rellena Value2 con la máscara indicada. 
; Es opcional y sirve para aquellos casos en que no se termina de teclear todo los dígitos de datetime y así cuando vuelve a coger el foco
; el input mostrará los datos conforme a la máscara dada en FillDateTimeValue2
;---------------------------------------------------------------------------------------------------------------------------------------------------
;
;
; Fecha con Día/Mes/Año o lo mismo sin las barras separadora / - Con teclear un dígito o más al resto le da formato con los valores de la fecha actual
[DATE]
type=datetime
ModeRegExpInput=strong
RegExpInput=dmY || d/m/Y || j/n/Y || j/n/y
FillDateTimeValue2=dmY
;
ValueFormat=d/m/Y
;
;
; Fecha con Año-Mes-Día para actuar con input type="date"
[DATE-HTML]
type=datetime
length=10
RegExpInput=Y-m-d
;
;
; Fecha con Dia/Mes/Año Hora/Segundos
[DATETIME]
type=datetime
ModeRegExpInput=strong
RegExpInput=d/m/Y H:i || d/m/Y Hi || d/m/Y || dmY Hi || dmY H:i || dmY || j/n/y || j/n/y H:i || j/n/y Hi
;
ValueFormat=d/m/Y H:i
;
;
; Fecha con Año-Mes-DíaTHora:Segundos para actuar con input type="datetime-locale"
[DATETIME-HTML]
type=datetime
length=16
RegExpInput=Y-m-dTH:i
;
;
;
; Hora y segundos
[TIME]
type=datetime
ModeRegExpInput=strong
RegExpInput=H:i || H:i:s.u || Hi || His || Hisu
;
ValueFormat=H:i:s.u
;
;
; Hora y segundos para actuar con input type="time"
[TIME-HTML]
type=datetime
length=5
RegExpInput=H:i
;
;
;
;
[TEXT]
type=text
RegExpInput=
length=100
RegExpOutput=
;
;Expresión Regular para Quitar las tildes
ValueFormat= /[áàéèíìóòúù]/ig <[{"á":"a", "é":"e", "í":"i", "ó":"o", "ú":"u","à":"a", "è":"e", "ì":"i", "ò":"o", "ù":"u", "Á":"A", "É":"E", "Í":"I", "Ó":"O", "Ú":"U","À":"A", "È":"E", "Ì":"I", "Ò":"O", "Ù":"U"}]>
;
;
;
[LABELS]
type=text
RegExpInput=
length=100
RegExpOutput=
;
;Expresión Regular para Cambiar Etiquetas
ValueFormat= /Feo|Tonto|Inutil|Borde|Triste/ig <[{"feo":"Guapo", "tonto":"Listo", "inutil":"Genio", "borde":"Simpático", "triste":"Alegre"}]>
;
